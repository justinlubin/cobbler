beginning synthesis...
tried (non-raising) program 'zero'
normalizes to '(Zero (lambda z z))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program 'f'
normalizes to 'f'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program 'mx'
normalizes to 'mx'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) f)'
normalizes to '(match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) mx)'
normalizes to '(match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) f)'
normalizes to '(match f (Nothing n -> f) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) mx)'
normalizes to '(match mx (Nothing n -> f) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) f)'
normalizes to '(match f (Nothing n -> mx) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) mx)'
normalizes to '(match mx (Nothing n -> mx) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program 'zero'
normalizes to '(Zero (lambda z z))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program 'f'
normalizes to 'f'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program 'mx'
normalizes to 'mx'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) f)'
normalizes to '(match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) mx)'
normalizes to '(match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) f)'
normalizes to '(match f (Nothing n -> f) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) mx)'
normalizes to '(match mx (Nothing n -> f) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) f)'
normalizes to '(match f (Nothing n -> mx) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) mx)'
normalizes to '(match mx (Nothing n -> mx) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) f)'
normalizes to '(match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) mx)'
normalizes to '(match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Zero (lambda z z))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Zero (lambda z z))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> (match x (Nothing n -> (Zero (lambda z z))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) ((map f) f))'
normalizes to '(match f (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> (match x (Nothing n -> (Zero (lambda z z))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> (match x (Nothing n -> (Zero (lambda z z))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Zero (lambda z z))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> (match x (Nothing n -> (Zero (lambda z z))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault zero) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map zero) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) f)'
normalizes to '(match f (Nothing n -> f) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) mx)'
normalizes to '(match mx (Nothing n -> f) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) ((map zero) f))'
normalizes to '(match f (Nothing n -> f) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just (f ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> f) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> (match x (Nothing n -> f) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) ((map f) f))'
normalizes to '(match f (Nothing n -> f) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just (f (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> (match x (Nothing n -> f) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) ((map f) mx))'
normalizes to '(match mx (Nothing n -> f) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> (match x (Nothing n -> f) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) ((map mx) f))'
normalizes to '(match f (Nothing n -> f) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just (f (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> (match x (Nothing n -> f) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault f) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> f) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map f) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) f)'
normalizes to '(match f (Nothing n -> mx) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) mx)'
normalizes to '(match mx (Nothing n -> mx) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) ((map zero) f))'
normalizes to '(match f (Nothing n -> mx) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> mx) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> (match x (Nothing n -> mx) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) ((map f) f))'
normalizes to '(match f (Nothing n -> mx) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> (match x (Nothing n -> mx) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) ((map f) mx))'
normalizes to '(match mx (Nothing n -> mx) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> (match x (Nothing n -> mx) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) ((map mx) f))'
normalizes to '(match f (Nothing n -> mx) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> (match x (Nothing n -> mx) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault mx) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> mx) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map mx) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) f)) f)'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) f)) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) f)) mx)'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) f)) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) f)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) f)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) f)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) f)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) f)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) f)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) f)) ((map f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) f)) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) f)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) f)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) f)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) f)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) f)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) f)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) f)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) f)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) f)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) f)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) f)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) f)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Zero (lambda z z))) (Just x -> x)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) f)) f)'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) f)) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) f)) mx)'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) f)) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) f)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) f)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) f)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) f)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) f)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) f)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) f)) ((map f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) f)) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) f)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) f)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) f)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) f)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) f)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) f)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) f)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) f)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) f)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) f)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) f)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) f)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) mx)) f)'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) mx)) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) mx)) mx)'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) mx)) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) mx)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) mx)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) mx)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) mx)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) mx)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) mx)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) mx)) ((map f) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) mx)) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) mx)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) mx)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) mx)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) mx)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) mx)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) mx)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) mx)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) mx)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) mx)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) mx)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault zero) mx)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault zero) mx)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Zero (lambda z z))) (Just x -> x)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) mx)) f)'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) mx)) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) mx)) mx)'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) mx)) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) mx)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) mx)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) mx)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) mx)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) mx)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) mx)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) mx)) ((map f) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) mx)) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) mx)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) mx)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) mx)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) mx)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) mx)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) mx)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) mx)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) mx)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) mx)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) mx)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map zero) mx)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x))))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map zero) mx)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((Zero (lambda z z)) x)))) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) f)) f)'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) f)) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) f)) mx)'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) f)) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) f)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) f)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) f)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) f)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) f)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) f)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) f)) ((map f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) f)) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) f)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) f)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) f)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) f)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) f)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) f)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) f)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) f)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) f)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) f)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) f)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> f) (Just x -> x))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) f)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> f) (Just x -> x)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) f)) f)'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) f)) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) f)) mx)'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) f)) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) f)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) f)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) f)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) f)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) f)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) f)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) f)) ((map f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) f)) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) f)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) f)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) f)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) f)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) f)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) f)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) f)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) f)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) f)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) f)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) f)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) f)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) mx)) f)'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) mx)) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) mx)) mx)'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) mx)) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) mx)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) mx)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) mx)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) mx)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) mx)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) mx)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) mx)) ((map f) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) mx)) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) mx)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) mx)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) mx)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) mx)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) mx)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) mx)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) mx)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) mx)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) mx)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) mx)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault f) mx)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> f) (Just x -> x))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault f) mx)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> f) (Just x -> x)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) mx)) f)'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) mx)) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) mx)) mx)'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) mx)) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) mx)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) mx)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) mx)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) mx)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) mx)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) mx)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) mx)) ((map f) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) mx)) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) mx)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) mx)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) mx)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) mx)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) mx)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) mx)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) mx)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) mx)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) mx)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) mx)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map f) mx)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x))))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map f) mx)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (f x)))) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) f)) f)'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) f)) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) f)) mx)'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) f)) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) f)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) f)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) f)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) f)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) f)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) f)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) f)) ((map f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) f)) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) f)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) f)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) f)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) f)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) f)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) f)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) f)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) f)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) f)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) f)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) f)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> mx) (Just x -> x))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) f)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> mx) (Just x -> x)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) f)) f)'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) f)) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) f)) mx)'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) f)) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) f)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) f)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) f)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) f)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) f)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) f)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) f)) ((map f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) f)) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) f)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) f)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) f)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) f)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) f)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) f)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) f)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) f)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) f)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) f)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) f)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) f)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match f (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) mx)) f)'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) mx)) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) mx)) mx)'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) mx)) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) mx)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) mx)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) mx)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) mx)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) mx)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) mx)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) mx)) ((map f) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) mx)) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) mx)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) mx)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) mx)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) mx)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) mx)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) mx)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) mx)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) mx)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) mx)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) mx)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((withDefault mx) mx)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> mx) (Just x -> x))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((withDefault mx) mx)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> mx) (Just x -> x)) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) mx)) f)'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) mx)) f)'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) mx)) mx)'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) mx)) mx)'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) mx)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) mx)) ((map zero) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) mx)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> ((Zero (lambda z z)) x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) mx)) ((map zero) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) ((Zero (lambda z z)) x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) mx)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) mx)) ((withDefault f) f))'
normalizes to '(match f (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) mx)) ((map f) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) mx)) ((map f) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) mx)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) mx)) ((withDefault f) mx))'
normalizes to '(match mx (Nothing n -> (match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) mx)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> (f x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) mx)) ((map f) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) (f x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) mx)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) mx)) ((withDefault mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) mx)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) mx)) ((map mx) f))'
normalizes to '(match f (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) mx)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))) (Just x -> (match x (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> x))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) mx)) ((withDefault mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))) (Just x -> (match x (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) x))))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((withDefault ((map mx) mx)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x))))) (Just x -> (mx x)))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
tried (non-raising) program '((map ((map mx) mx)) ((map mx) mx))'
normalizes to '(match mx (Nothing n -> (Nothing n)) (Just x -> (Just ((match mx (Nothing n -> (Nothing n)) (Just x -> (Just (mx x)))) (mx x)))))'
goal: '(lambda f (lambda mx (match mx (Nothing n -> (Zero (lambda z z))) (Just x -> (f x)))))'
no solution found
